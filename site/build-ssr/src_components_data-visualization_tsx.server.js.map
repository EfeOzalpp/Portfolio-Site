{"version":3,"file":"src_components_data-visualization_tsx.server.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAC4C;AACP;AAC2B;AACF;AACW;AACrC;AAAA;AAkBpC,MAAMQ,sBAAsB,GAAGA,CAAA,KAAM;EACnC,MAAMC,OAAO,GAAGJ,qFAAU,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGV,+CAAQ,CAC7BQ,OAAO,EAAEG,SAAS,EAAEC,OAAO,IAAoB,IAClD,CAAC;EAEDT,0EAAc,CAAC,CAAC;;EAEhB;EACFJ,gDAAS,CAAC,MAAM;IACd,IAAIU,IAAI,EAAE,OAAO,CAAC;IAClBR,qDAAM,CACJY,KAAK,CACH;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,EACF;MAAEC,IAAI,EAAE;IAAW,CACrB,CAAC,CACAC,IAAI,CAACL,OAAO,CAAC,CACbM,KAAK,CAAEC,GAAQ,IAAK;MACnBC,OAAO,CAACC,IAAI,CAAC,6CAA6C,EAAEF,GAAG,CAAC;MAChEP,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGJ,IAAI,CAACD,IAAI,IAAI,CAACA,IAAI,CAACW,QAAQ,EAAE,OAAO,IAAI;EAExC,MAAM;IAAEC,GAAG,GAAG,oBAAoB;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGd,IAAI,CAACW,QAAQ;EAElE,MAAMI,OAAO,GAAGC,OAAO,CAACF,KAAK,EAAEG,OAAO,IAAIH,KAAK,EAAEI,MAAM,CAAC;EAExD,OACErB,+DAAA;IACEsB,SAAS,EAAC,cAAc;IACxBC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,EAEhCzB,+DAAA;MACEsB,SAAS,EAAC,eAAe;MACzBC,KAAK,EAAE;QACLG,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,OAAO;QACfH,QAAQ,EAAE;MACZ,CAAE;MAAAC,QAAA,EAEFzB,+DAAA,CAACJ,2EAAW;QACVgC,IAAI,EAAEV,OAAO,GAAG,OAAO,GAAG,OAAQ;QAClCW,GAAG,EAAEX,OAAO,GAAGD,KAAK,GAAID,KAAM;QAC9BD,GAAG,EAAEA,GAAI;QACTe,EAAE,EAAC,SAAS;QACZR,SAAS,EAAC,kBAAkB;QAC5BS,cAAc,EAAC,eAAe;QAC9BR,KAAK,EAAE;UACLG,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE;QACV;MAAE,CACH;IAAC,CACC;EAAC,CACC,CAAC;AAEd,CAAC;AAED,iEAAe1B,sBAAsB,E","sources":["webpack://personal-site/./src/components/data-visualization.tsx"],"sourcesContent":["// src/components/DataVisualizationBlock.tsx\r\nimport { useEffect, useState } from 'react';\r\nimport client from '../utils/sanity';\r\nimport MediaLoader from '../utils/media-providers/media-loader';\r\nimport { useTooltipInit } from '../utils/tooltip/tooltipInit';\r\nimport { useSsrData } from '../utils/context-providers/ssr-data-context';\r\nimport '../styles/block-type-1.css';\r\n\r\ntype VideoSet = {\r\n  webmUrl?: string;\r\n  mp4Url?: string;\r\n  poster?: any; \r\n};\r\n\r\ntype MediaSlot = {\r\n  alt?: string;\r\n  image?: any;\r\n  video?: VideoSet;\r\n};\r\n\r\ntype DataVizData = {\r\n  mediaOne: MediaSlot;\r\n};\r\n\r\nconst DataVisualizationBlock = () => {\r\n  const ssrData = useSsrData(); // <-- read from SSR context\r\n  const [data, setData] = useState<DataVizData | null>(\r\n    (ssrData?.preloaded?.dataviz as DataVizData) || null\r\n  );\r\n\r\n  useTooltipInit();\r\n\r\n  // Fetch data from Sanity\r\nuseEffect(() => {\r\n  if (data) return; // already have SSR data\r\n  client\r\n   .fetch<DataVizData>(\r\n      `*[_type == \"mediaBlock\" && slug.current == $slug][0]{\r\n        mediaOne{\r\n          alt,\r\n          image,\r\n          video{\r\n            \"webmUrl\": webm.asset->url,\r\n            \"mp4Url\": mp4.asset->url,\r\n            poster\r\n          }\r\n        }\r\n      }`,\r\n      { slug: 'data-viz' }\r\n    )\r\n    .then(setData)\r\n    .catch((err: any) => {\r\n      console.warn('[DataVisualizationBlock] GROQ fetch failed:', err);\r\n      setData(null);\r\n    });\r\n}, []);\r\n\r\n\r\n  if (!data || !data.mediaOne) return null;\r\n\r\n  const { alt = 'Data Visualization', image, video } = data.mediaOne;\r\n\r\n  const isVideo = Boolean(video?.webmUrl || video?.mp4Url);\r\n\r\n  return (\r\n    <section\r\n      className=\"block-type-1\"\r\n      style={{ position: 'relative' }}\r\n    >\r\n      <div\r\n        className=\"media-content\"\r\n        style={{\r\n          width: '100%',\r\n          height: '100vh',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <MediaLoader\r\n          type={isVideo ? 'video' : 'image'}\r\n          src={isVideo ? video! : image}\r\n          alt={alt}\r\n          id=\"block-d\"\r\n          className=\"tooltip-data-viz\"\r\n          objectPosition=\"center center\"\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n          }}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DataVisualizationBlock;\r\n"],"names":["useEffect","useState","client","MediaLoader","useTooltipInit","useSsrData","jsx","_jsx","DataVisualizationBlock","ssrData","data","setData","preloaded","dataviz","fetch","slug","then","catch","err","console","warn","mediaOne","alt","image","video","isVideo","Boolean","webmUrl","mp4Url","className","style","position","children","width","height","type","src","id","objectPosition"],"sourceRoot":""}