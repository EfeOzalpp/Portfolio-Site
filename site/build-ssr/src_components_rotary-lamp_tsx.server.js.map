{"version":3,"file":"src_components_rotary-lamp_tsx.server.js","mappings":"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","sources":["webpack://personal-site/./src/components/rotary-lamp.tsx"],"sourcesContent":["// src/sections/RotaryLamp.tsx\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport client from '../utils/sanity';\r\nimport SplitDragHandler from '../utils/split-controller';\r\nimport MediaLoader from '../utils/media-providers/media-loader';\r\nimport { useTooltipInit } from '../utils/tooltip/tooltipInit';\r\nimport { useSsrData } from '../utils/context-providers/ssr-data-context';\r\nimport '../styles/block-type-1.css';\r\n\r\nconst RotaryLamp = () => {\r\n  const ssrData = useSsrData();\r\n  const preloaded = ssrData?.preloaded?.rotary; // assuming you key it as \"rotary\"\r\n\r\n  const [data, setData] = useState(preloaded || null);\r\n  const [split, setSplit] = useState(() => (window.innerWidth < 768 ? 55 : 50));\r\n  const [isPortrait, setIsPortrait] = useState(window.innerHeight > window.innerWidth);\r\n\r\n  useTooltipInit();\r\n\r\n  // Fetch only if SSR data wasn't provided\r\n  useEffect(() => {\r\n    if (data) return;\r\n    const fetchData = async () => {\r\n      const res = await client.fetch(`\r\n        *[_type == \"mediaBlock\" && title match \"Rotary Lamp\"][0]{\r\n          mediaOne {\r\n            alt,\r\n            image,\r\n            video { asset->{url} }\r\n          },\r\n          mediaTwo {\r\n            alt,\r\n            image,\r\n            video { asset->{url} }\r\n          }\r\n        }\r\n      `);\r\n      setData(res);\r\n    };\r\n\r\n    fetchData();\r\n  }, [data]);\r\n\r\n  // Handle orientation switch\r\n  useEffect(() => {\r\n    const handleResize = () => setIsPortrait(window.innerHeight > window.innerWidth);\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  if (!data) return null;\r\n\r\n  const media1 = isPortrait ? data.mediaOne : data.mediaTwo;\r\n  const media2 = isPortrait ? data.mediaTwo : data.mediaOne;\r\n\r\n  const alt1 = media1?.alt || 'Rotary Lamp media';\r\n  const alt2 = media2?.alt || 'Rotary Lamp media';\r\n\r\n  return (\r\n    <section className=\"block-type-1\"\r\n      style={{ position: 'relative' }}>\r\n      {/* LEFT / TOP media */}\r\n      <div\r\n        className=\"media-content-1\"\r\n        style={\r\n          isPortrait\r\n            ? {\r\n                height: split <= 20 ? '0%' : `${split}%`,\r\n                width: '100%',\r\n                position: 'absolute',\r\n                top: 0,\r\n                transition: split <= 20 ? 'height 0.1s ease' : 'none',\r\n              }\r\n            : {\r\n                width: `${split}%`,\r\n                height: '100%',\r\n                position: 'absolute',\r\n                left: 0,\r\n              }\r\n        }\r\n      >\r\n        <MediaLoader\r\n          type=\"image\"\r\n          src={media1?.image}\r\n          alt={alt1}\r\n          id=\"rotary-media-1\"\r\n          className=\"media-item-1 tooltip-rotary-lamp\"\r\n        />\r\n      </div>\r\n\r\n      {/* SPLITTER */}\r\n      <SplitDragHandler split={split} setSplit={setSplit} />\r\n\r\n      {/* RIGHT / BOTTOM media */}\r\n      <div\r\n        className=\"media-content-2\"\r\n        style={\r\n          isPortrait\r\n            ? {\r\n                height: split <= 20 ? '100%' : `${100 - split}%`,\r\n                width: '100%',\r\n                position: 'absolute',\r\n                top: split <= 20 ? '0%' : `${split}%`,\r\n                transition: split <= 20 ? 'height 0.1s ease, top 0.1s ease' : 'none',\r\n              }\r\n            : {\r\n                width: `${100 - split}%`,\r\n                height: '100%',\r\n                position: 'absolute',\r\n                left: `${split}%`,\r\n              }\r\n        }\r\n      >\r\n        <MediaLoader\r\n          type={media2?.video?.asset?.url ? 'video' : 'image'}\r\n          src={media2?.video?.asset?.url || media2?.image}\r\n          alt={alt2}\r\n          id=\"rotary-media-2\"\r\n          className=\"media-item-2 tooltip-rotary-lamp\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RotaryLamp;\r\n"],"names":["useEffect","useState","client","SplitDragHandler","MediaLoader","useTooltipInit","useSsrData","jsx","_jsx","jsxs","_jsxs","RotaryLamp","ssrData","preloaded","rotary","data","setData","split","setSplit","window","innerWidth","isPortrait","setIsPortrait","innerHeight","fetchData","res","fetch","handleResize","addEventListener","removeEventListener","media1","mediaOne","mediaTwo","media2","alt1","alt","alt2","className","style","position","children","height","width","top","transition","left","type","src","image","id","video","asset","url"],"sourceRoot":""}